     1                                  bits 32 
     2                                  
     3                                  
     4                                  global start        
     5                                  
     6                                  
     7                                  extern exit, fopen, fclose, printf, fread, fprintf,scanf,gets
     8                                  import exit msvcrt.dll     
     9                                  import fopen msvcrt.dll
    10                                  import fclose msvcrt.dll
    11                                  import printf msvcrt.dll
    12                                  import fread msvcrt.dll
    13                                  import fprintf msvcrt.dll
    14                                  import scanf msvcrt.dll
    15                                  import gets msvcrt.dll
    16                                  
    17                                  
    18                                  segment data use32 class=data
    19                                      
    20 00000000 <res 00000064>              nume_fisier resb 100
    21 00000064 7200                        mod_acces db "r", 0
    22 00000066 <res 00000064>              text_fisier resb len
    23                                      len equ 100
    24 000000CA FF                          file_descriptor db -1
    25 000000CB 04000000                    divisor dd 4
    26 000000CF <res 00000032>              cuvant resb 50
    27                                      
    28 00000101 256300                      format db "%c", 0
    29                                      
    30                                      
    31                                  segment code use32 class=code
    32                                      start:
    33                                      
    34 00000000 68[00000000]                push dword nume_fisier
    35 00000005 FF15[00000000]              call [gets]
    36 0000000B 83C404                      add esp, 4
    37                                      
    38 0000000E 68[64000000]                push dword mod_acces
    39 00000013 68[00000000]                push dword nume_fisier
    40 00000018 FF15[00000000]              call [fopen]
    41 0000001E 83C408                      add esp, 8
    42                                      
    43 00000021 A3[CA000000]                mov [file_descriptor], eax
    44                                      
    45                                      
    46 00000026 83F800                      cmp eax, 0
    47 00000029 746C                        je final_program
    48                                      
    49 0000002B FF35[CA000000]              push dword[file_descriptor]
    50 00000031 6A64                        push dword len
    51 00000033 6A01                        push dword 1
    52 00000035 68[66000000]                push dword text_fisier
    53 0000003A FF15[00000000]              call [fread]
    54 00000040 83C410                      add esp, 16
    55                                      
    56 00000043 89C1                        mov ecx, eax
    57                                      
    58 00000045 FF35[CA000000]              push dword [file_descriptor]
    59 0000004B FF15[00000000]              call [fclose]
    60 00000051 83C404                      add esp, 4
    61                                      
    62 00000054 BE[66000000]                mov esi, text_fisier
    63 00000059 B800000000                  mov eax, 0
    64 0000005E BF[CF000000]                mov edi, cuvant
    65                                      
    66                                      bucla:
    67                                      
    68 00000063 AC                          lodsb
    69                                      ;mov ebx, dword 0
    70                                      ;add bl, al
    71 00000064 3C20                        cmp al, ' '
    72 00000066 7401                        je not_store
    73                                      
    74 00000068 AA                          stosb
    75                                      
    76                                      not_store:
    77                                      
    78 00000069 3C20                        cmp al, ' '
    79 0000006B 7400                        je store
    80                                      
    81                                      store:
    82 0000006D 40                          inc eax
    83 0000006E BA00000000                  mov edx, 0
    84 00000073 F735[CB000000]              div dword[divisor]
    85 00000079 83FA00                      cmp edx, dword 0
    86 0000007C 7513                        jne not_print
    87                                      
    88 0000007E 68[CF000000]                push dword cuvant
    89 00000083 68[01010000]                push dword format
    90 00000088 FF15[00000000]              call [printf]
    91 0000008E 83C408                      add esp, 8
    92                                      
    93                                      not_print:
    94                                      
    95 00000091 83C602                      add esi, 2
    96 00000094 49                          dec ecx
    97                                      
    98 00000095 EBCC                        jmp bucla
    99                                  
   100                                      
   101                                      
   102                                      final_program:
   103                                  
   104                                  
   105                                          ; exit(0)
   106 00000097 6A00                            push    dword 0      ; push the parameter for exit onto the stack
   107 00000099 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
