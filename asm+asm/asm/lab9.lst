     1                                  bits 32
     2                                  global start 
     3                                  
     4                                  extern exit,scanf,printf
     5                                  extern afish
     6                                  
     7                                  import scanf msvcrt.dll
     8                                  import printf msvcrt.dll
     9                                  import exit msvcrt.dll  
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 00000000                    n dd 0
    14 00000004 <res 00000078>              sir resd 30
    15 0000007C 257800                      format  db "%x", 0 
    16 0000007F 25642000                    formatdec db "%d ", 0
    17                                  
    18                                      
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22                                      
    23 00000000 B801000000                      mov eax, 1
    24 00000005 B900000000                      mov ecx, 0
    25 0000000A BF[04000000]                    mov edi, sir
    26                                          
    27                                          continue_reading:
    28                                              
    29 0000000F 60                                  pushad
    30 00000010 68[00000000]                        push dword n
    31 00000015 68[7C000000]                        push dword format
    32 0000001A FF15[00000000]                      call [scanf]
    33 00000020 83C408                              add esp, 4 * 2
    34 00000023 61                                  popad
    35                                              
    36 00000024 A1[00000000]                        mov eax, dword[n]
    37 00000029 83F800                              cmp eax, dword 0
    38 0000002C 7409                                je finish_reading
    39                                           
    40 0000002E 41                                  inc ecx
    41 0000002F A1[00000000]                        mov eax, dword[n]
    42 00000034 AB                                  stosd
    43                                          
    44 00000035 EBD8                            jmp continue_reading
    45                                          finish_reading:
    46                                          
    47 00000037 89CA                            mov edx, ecx
    48 00000039 BE[04000000]                    mov esi, sir
    49                                          Display_numbers_signed:
    50                                          
    51 0000003E 60                                  pushad
    52 0000003F FF36                                push dword [esi]
    53 00000041 6A01                                push dword 1
    54 00000043 E8(00000000)                        call afish
    55 00000048 83C404                              add esp, 4
    56 0000004B 61                                  popad
    57                                              
    58 0000004C 83C604                              add esi, 4
    59 0000004F E2ED                            loop Display_numbers_signed
    60                                          
    61 00000051 89D1                            mov ecx, edx
    62 00000053 BE[04000000]                    mov esi, sir
    63                                          Display_numbers_unsigned:
    64                                          
    65 00000058 60                                  pushad
    66 00000059 FF36                                push dword [esi]
    67 0000005B 6A02                                push dword 2
    68 0000005D E8(00000000)                        call afish
    69 00000062 83C404                              add esp, 4
    70 00000065 61                                  popad
    71                                              
    72 00000066 83C604                              add esi, 4
    73 00000069 E2ED                            loop Display_numbers_unsigned
    74                                          
    75                                          ; exit(0)
    76 0000006B 6A00                            push    dword 0 
    77 0000006D FF15[00000000]                  call    [exit] 
